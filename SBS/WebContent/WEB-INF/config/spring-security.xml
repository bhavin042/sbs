<beans:beans xmlns="http://www.springframework.org/schema/security"
	xmlns:beans="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
	http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
	http://www.springframework.org/schema/security
	http://www.springframework.org/schema/security/spring-security-3.2.xsd">

	<!-- enable use-expressions -->
	<http auto-config="true" use-expressions="true">
		<headers>
			<cache-control/>	
		</headers>
		<intercept-url pattern="/admin**" access="hasRole('ROLE_ADMIN')" />
		<intercept-url pattern="/emp**" access="hasRole('ROLE_EMP')" />
		
		<intercept-url pattern="/homePage**" access="hasRole('ROLE_INDIVIDUAL')" />
		<intercept-url pattern="/MerchantHome**" access="hasRole('ROLE_MERCHANT')" />
		
		<intercept-url pattern="/AccountDetails**" access="hasRole('ROLE_MERCHANT')" />
		<intercept-url pattern="/AccountDetails**" access="hasRole('ROLE_INDIVIDUAL')" />
		<intercept-url pattern="/Credit**" access="hasRole('ROLE_MERCHANT')" />
		<intercept-url pattern="/Credit**" access="hasRole('ROLE_INDIVIDUAL')" />
		<!-- <intercept-url pattern="/debit**" access="hasRole('ROLE_MERCHANT')" /> -->
		<intercept-url pattern="/listOfRequests**" access="hasRole('ROLE_INDIVIDUAL')" />
		<intercept-url pattern="/RequestPayment**" access="hasRole('ROLE_MERCHANT')" />
		<!-- <intercept-url pattern="/transfer**" access="hasRole('ROLE_INDIVIDUAL')" />
		<intercept-url pattern="/transfer**" access="hasRole('ROLE_MERCHANT')" /> -->
		<!-- <intercept-url pattern="/profile**" access="hasRole('ROLE_INDIVIDUAL')" />
		<intercept-url pattern="/profile**" access="hasRole('ROLE_MERCHANT')" /> -->
		<!-- <intercept-url pattern="/debit**" access="hasRole('ROLE_INDIVIDUAL')" /> -->
		
		
		<!-- access denied page -->
		<access-denied-handler error-page="/403" />
		<form-login login-page="/login" default-target-url="/welcome"
			authentication-failure-url="/login?error" username-parameter="username"
			password-parameter="password" authentication-success-handler-ref="authSuccessHandler"/>
		<logout logout-success-url="/login?logout" />
		<!-- enable csrf protection -->
		<!--  <csrf />-->
	</http>
    <beans:bean id="authSuccessHandler" class="sbs.bank.handler.authSuccessHandler" />
	<beans:bean id="customUserDetailsService"
		class="sbs.bank.service.CustomUserDetailsService">
		<beans:property name="usersByUsernameQuery" value="select * from users where username = ?"/>
		<beans:property name="authoritiesByUsernameQuery" value="select username, role from user_roles where username =?" />
		<beans:property name="dataSource" ref="dataSource" />
	</beans:bean>
 	
 	<beans:bean id="encoder" class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder"/>	
	
	<beans:bean id="userDetailsDao" class="sbs.bank.dao.impl.UserDetailsDaoImpl" >
		<beans:property name="dataSource" ref="dataSource" />
	</beans:bean>
	
	<beans:bean id="authenticationProvider"
		class="sbs.bank.handler.LimitLoginAuthenticationProvider">
		<beans:property name="userDetailsService" ref="customUserDetailsService" />
		<beans:property name="userDetailsDao" ref="userDetailsDao" />
		<beans:property name="passwordEncoder" ref="encoder" />
	</beans:bean>
	
	<authentication-manager>
		<authentication-provider ref="authenticationProvider"/>
	</authentication-manager>
	
</beans:beans>
  